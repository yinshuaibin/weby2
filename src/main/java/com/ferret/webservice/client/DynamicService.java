package com.ferret.webservice.client;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.2.1
 * 2018-01-17T11:27:43.986+08:00
 * Generated source VERSION: 3.2.1
 * 
 */
@WebServiceClient(name = "DynamicService", 
                  wsdlLocation = "http://192.168.1.105/DynaService.asmx?wsdl",
                  targetNamespace = "http://tempuri.org/") 
public class DynamicService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://tempuri.org/", "DynamicService");
    public final static QName DynamicServiceSoap = new QName("http://tempuri.org/", "DynamicServiceSoap");
    public final static QName DynamicServiceSoap12 = new QName("http://tempuri.org/", "DynamicServiceSoap12");
    static {
        URL url = null;
        try {
            url = new URL("http://192.168.1.105/DynaService.asmx?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(DynamicService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "http://192.168.1.105/DynaService.asmx?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public DynamicService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public DynamicService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public DynamicService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public DynamicService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public DynamicService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public DynamicService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    




    /**
     *
     * @return
     *     returns DynamicServiceSoap
     */
    @WebEndpoint(name = "DynamicServiceSoap")
    public DynamicServiceSoap getDynamicServiceSoap() {
        return super.getPort(DynamicServiceSoap, DynamicServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns DynamicServiceSoap
     */
    @WebEndpoint(name = "DynamicServiceSoap")
    public DynamicServiceSoap getDynamicServiceSoap(WebServiceFeature... features) {
        return super.getPort(DynamicServiceSoap, DynamicServiceSoap.class, features);
    }


    /**
     *
     * @return
     *     returns DynamicServiceSoap
     */
    @WebEndpoint(name = "DynamicServiceSoap12")
    public DynamicServiceSoap getDynamicServiceSoap12() {
        return super.getPort(DynamicServiceSoap12, DynamicServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns DynamicServiceSoap
     */
    @WebEndpoint(name = "DynamicServiceSoap12")
    public DynamicServiceSoap getDynamicServiceSoap12(WebServiceFeature... features) {
        return super.getPort(DynamicServiceSoap12, DynamicServiceSoap.class, features);
    }

}
